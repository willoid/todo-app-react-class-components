{"version":3,"sources":["logo.svg","components/ToDoForm.js","components/ToDo.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["uuid","require","NewTodoForm","props","state","task","handleChange","bind","handleSubmit","evt","this","setState","target","name","value","preventDefault","createTodo","id","completed","className","onSubmit","htmlFor","type","placeholder","onChange","Component","Todo","isEditing","handleRemove","toggleForm","handleUpdate","handleToggle","removeTodo","updateTodo","toggleTodo","result","CSSTransition","timeout","classNames","onClick","TransitionGroup","TodoList","todos","create","remove","update","toggleCompletion","newTodo","filter","t","updatedTask","updatedTodos","map","todo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1b8cdc1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from \"react\";\nimport \"./ToDoForm.css\";\nconst { uuid } = require('uuidv4');\n\nclass NewTodoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { task: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.createTodo({ ...this.state, id: uuid(), completed: false });\n    this.setState({ task: \"\" });\n  }\n  render() {\n    return (\n      <form className='ToDoForm' onSubmit={this.handleSubmit}>\n        <label htmlFor='task'>New Task</label>\n        <input\n          type='text'\n          placeholder='New Task'\n          id='task'\n          name='task'\n          value={this.state.task}\n          onChange={this.handleChange}\n        />\n        <button>Add Task</button>\n      </form>\n    );\n  }\n}\nexport default NewTodoForm;\n","import React, { Component } from \"react\";\nimport \"./ToDo.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      task: this.props.task\n    };\n    this.handleRemove = this.handleRemove.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n  handleRemove() {\n    this.props.removeTodo(this.props.id);\n  }\n  toggleForm() {\n    this.setState({ isEditing: !this.state.isEditing });\n  }\n  handleUpdate(evt) {\n    evt.preventDefault();\n    //take new task data and pass up to parent\n    this.props.updateTodo(this.props.id, this.state.task);\n    this.setState({ isEditing: false });\n  }\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n  handleToggle(evt) {\n    this.props.toggleTodo(this.props.id);\n  }\n  render() {\n    let result;\n    if (this.state.isEditing) {\n      result = (\n        <CSSTransition key='editing' timeout={500} classNames='form'>\n          <form className='Todo-edit-form' onSubmit={this.handleUpdate}>\n            <input\n              type='text'\n              value={this.state.task}\n              name='task'\n              onChange={this.handleChange}\n            />\n            <button>Save</button>\n          </form>\n        </CSSTransition>\n      );\n    } else {\n      result = (\n        <CSSTransition key='normal' timeout={500} classNames='task-text'>\n          <li className='Todo-task' onClick={this.handleToggle}>\n            {this.props.task}\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <TransitionGroup\n        className={this.props.completed ? \"Todo completed\" : \"Todo\"}\n      >\n        {result}\n        <div className='Todo-buttons'>\n          <button onClick={this.toggleForm}>edit\n          </button>\n          <button onClick={this.handleRemove}>delete\n          </button>\n        </div>\n      </TransitionGroup>\n    );\n  }\n}\nexport default Todo;\n","import React, { Component } from \"react\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDo from \"./ToDo\";\nimport \"./ToDoList.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n    this.create = this.create.bind(this);\n    this.remove = this.remove.bind(this);\n    this.update = this.update.bind(this);\n    this.toggleCompletion = this.toggleCompletion.bind(this);\n  }\n  create(newTodo) {\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  }\n  remove(id) {\n    this.setState({\n      todos: this.state.todos.filter(t => t.id !== id)\n    });\n  }\n  update(id, updatedTask) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, task: updatedTask };\n      }\n      return todo;\n    });\n    this.setState({ todos: updatedTodos });\n  }\n  toggleCompletion(id) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, completed: !todo.completed };\n      }\n      return todo;\n    });\n    this.setState({ todos: updatedTodos });\n  }\n  render() {\n    const todos = this.state.todos.map(todo => {\n      return (\n        <CSSTransition key={todo.id} timeout={500} classNames='todo'>\n          <ToDo\n            key={todo.id}\n            id={todo.id}\n            task={todo.task}\n            completed={todo.completed}\n            removeTodo={this.remove}\n            updateTodo={this.update}\n            toggleTodo={this.toggleCompletion}\n          />\n        </CSSTransition>\n      );\n    });\n    return (\n      <div className='TodoList'>\n        <h1>\n          Time to Work, Willy!\n        </h1>\n        <ToDoForm createTodo={this.create} />\n\n        <ul>\n          <TransitionGroup className='todo-list'>{todos}</TransitionGroup>\n        </ul>\n      </div>\n    );\n  }\n}\nexport default TodoList;\n","import logo from './logo.svg';\nimport './App.css';\nimport ToDoList from './components/ToDoList'\n\nfunction App() {\n  return (\n    <div>\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}